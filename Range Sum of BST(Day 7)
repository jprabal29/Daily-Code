Link->---https://leetcode.com/problems/range-sum-of-bst/description/


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
     void traverseBST(TreeNode* root,vector<int>& v){
         if(root==NULL){
             return;
         }

         traverseBST(root->left,v);

         v.push_back(root->val);

         traverseBST(root->right,v);

     }

    int rangeSumBST(TreeNode* root, int low, int high) {
        vector<int> v;
        traverseBST(root,v);
        sort(v.begin(),v.end());
        int sum=0;
        for(auto x: v){
            // cout<<x<<" ";
            if(x>=low&&x<=high){
                sum+=x;
            }
        }
        return sum;
    }
};
